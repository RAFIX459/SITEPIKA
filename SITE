-- Rafi_X Hub - Versão Suprema (Simulador Seguro)
-- Ambiente de treino local para Roblox/Blox-Fruits-like (NÃO é cheat)
-- Coloque um LocalScript em StarterPlayerScripts e crie ReplicatedStorage.Weapons (Modelos ou Tools locais)
-- Autor: Rafi_X (Simulado)

--// Serviços
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local TweenService = game:GetService("TweenService")

--// Player
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

--// Config inicial
local Config = {
    AutoFarm = false,
    AutoSkills = false,
    SelectedWeapon = nil,        -- string name of weapon in ReplicatedStorage.Weapons
    SkillSequence = {"Q","E","R"}, -- simulated keys
    SkillDelay = 0.6,
    TeleportYOffset = 5,
    AutoFarmDamage = 120,        -- damage per attack simulation
    BossSpawnOffset = Vector3.new(0,0,-30)
}

--// Containers
local UI = {}
local SimObjects = {} -- track spawned bosses

--// Helper: create simple UI
local function createGui()
    local screen = Instance.new("ScreenGui")
    screen.Name = "RafiX_Hub_Sim"
    screen.ResetOnSpawn = false
    screen.Parent = player:WaitForChild("PlayerGui")

    local main = Instance.new("Frame")
    main.Name = "Main"
    main.Size = UDim2.new(0,360,0,480)
    main.Position = UDim2.new(0,20,0,60)
    main.BackgroundColor3 = Color3.fromRGB(22,22,22)
    main.BorderSizePixel = 0
    main.Parent = screen

    local title = Instance.new("TextLabel", main)
    title.Size = UDim2.new(1,0,0,48)
    title.BackgroundColor3 = Color3.fromRGB(30,30,30)
    title.TextColor3 = Color3.fromRGB(255,255,255)
    title.Font = Enum.Font.SourceSansBold
    title.TextSize = 22
    title.Text = "Rafi_X Hub — Simulador (Segurança ON)"
    title.BorderSizePixel = 0

    -- Status label
    local status = Instance.new("TextLabel", main)
    status.Name = "Status"
    status.Size = UDim2.new(1, -20, 0, 30)
    status.Position = UDim2.new(0,10,0,420)
    status.BackgroundTransparency = 0.8
    status.TextColor3 = Color3.fromRGB(200,200,200)
    status.Font = Enum.Font.SourceSans
    status.TextSize = 16
    status.Text = "Status: Idle"

    -- Buttons area
    local y = 60
    local function newButton(name, yOffset)
        local btn = Instance.new("TextButton", main)
        btn.Size = UDim2.new(0.96,0,0,36)
        btn.Position = UDim2.new(0,8,0,yOffset)
        btn.BackgroundColor3 = Color3.fromRGB(52,52,52)
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.Font = Enum.Font.SourceSansSemibold
        btn.TextSize = 18
        btn.Text = name
        return btn
    end

    UI.Main = main
    UI.Status = status
    UI.ButtonSpawnBoss = newButton("Spawn Boss (Simulado)", y); y = y + 44
    UI.ButtonToggleAutoFarm = newButton("Toggle AutoFarm: OFF", y); y = y + 44
    UI.ButtonToggleAutoSkills = newButton("Toggle AutoSkills: OFF", y); y = y + 44
    UI.ButtonTeleportNearest = newButton("Teleport to Nearest Boss", y); y = y + 44
    UI.ButtonEquipNextWeapon = newButton("Equip Next Weapon (local)", y); y = y + 44

    -- Weapon list label
    local weaponsTitle = Instance.new("TextLabel", main)
    weaponsTitle.Size = UDim2.new(1, -20, 0, 22)
    weaponsTitle.Position = UDim2.new(0,10,0,y)
    weaponsTitle.BackgroundTransparency = 1
    weaponsTitle.TextColor3 = Color3.fromRGB(180,180,180)
    weaponsTitle.Font = Enum.Font.SourceSans
    weaponsTitle.TextSize = 14
    weaponsTitle.Text = "Armas locais (ReplicatedStorage.Weapons):"
    y = y + 26

    local weaponsFrame = Instance.new("Frame", main)
    weaponsFrame.Size = UDim2.new(1, -20, 0, 120)
    weaponsFrame.Position = UDim2.new(0,10,0,y)
    weaponsFrame.BackgroundColor3 = Color3.fromRGB(28,28,28)
    weaponsFrame.BorderSizePixel = 0
    weaponsFrame.ClipsDescendants = true

    local weaponsList = Instance.new("ScrollingFrame", weaponsFrame)
    weaponsList.Size = UDim2.new(1,0,1,0)
    weaponsList.BackgroundTransparency = 1
    weaponsList.CanvasSize = UDim2.new(0,0,0,0)
    weaponsList.ScrollBarThickness = 6

    UI.WeaponsFrame = weaponsList

    -- Log
    local log = Instance.new("TextBox", main)
    log.Size = UDim2.new(1, -20, 0, 90)
    log.Position = UDim2.new(0,10,1,-120)
    log.BackgroundColor3 = Color3.fromRGB(12,12,12)
    log.TextColor3 = Color3.fromRGB(180,180,180)
    log.Font = Enum.Font.SourceSans
    log.TextSize = 14
    log.MultiLine = true
    log.TextWrapped = true
    log.ReadOnly = true
    UI.LogBox = log
end

--// Utilities: logging and status
local function log(msg)
    if not UI.LogBox then return end
    local prev = UI.LogBox.Text
    local time = os.date("%H:%M:%S")
    UI.LogBox.Text = ("[%s] %s\n%s"):format(time, msg, prev)
end

local function updateStatus()
    local parts = {}
    if Config.AutoFarm then table.insert(parts, "AutoFarm") end
    if Config.AutoSkills then table.insert(parts, "AutoSkills") end
    if Config.SelectedWeapon then table.insert(parts, "Weapon:"..tostring(Config.SelectedWeapon)) end
    UI.Status.Text = "Status: " .. (next(parts) and table.concat(parts, " | ") or "Idle")
end

--// Weapons UI population (reads ReplicatedStorage.Weapons children names)
local function populateWeaponsUI()
    local folder = ReplicatedStorage:FindFirstChild("Weapons")
    if not folder then
        log("Aviso: ReplicatedStorage.Weapons não encontrado. Crie uma pasta com Tools/Models de teste.")
        return
    end
    local list = UI.WeaponsFrame
    for _, child in ipairs(list:GetChildren()) do child:Destroy() end

    local y = 0
    local buttonHeight = 28
    for i, item in ipairs(folder:GetChildren()) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, -6, 0, buttonHeight)
        btn.Position = UDim2.new(0, 3, 0, y)
        btn.BackgroundColor3 = Color3.fromRGB(42,42,42)
        btn.TextColor3 = Color3.fromRGB(230,230,230)
        btn.Font = Enum.Font.SourceSans
        btn.TextSize = 14
        btn.Text = item.Name
        btn.Parent = list
        y = y + buttonHeight + 4

        btn.MouseButton1Click:Connect(function()
            Config.SelectedWeapon = item.Name
            log("Arma selecionada: "..item.Name)
            updateStatus()
        end)
    end
    list.CanvasSize = UDim2.new(0,0,0, y)
end

--// Simulated Boss creation
local function spawnSimBoss(name, position)
    position = position or (rootPart.Position + Config.BossSpawnOffset)
    local model = Instance.new("Model")
    model.Name = name or "SimBoss"

    local head = Instance.new("Part")
    head.Name = "Head"
    head.Size = Vector3.new(4,1.8,4)
    head.Position = position + Vector3.new(0,6,0)
    head.Anchored = true
    head.Parent = workspace
    head.Parent = model

    local torso = Instance.new("Part")
    torso.Name = "Torso"
    torso.Size = Vector3.new(6,6,4)
    torso.Position = position
    torso.Anchored = true
    torso.Parent = model

    local humanoid = Instance.new("Humanoid")
    humanoid.MaxHealth = 5000
    humanoid.Health = 5000
    humanoid.Parent = model

    -- Billboard health display
    local billboard = Instance.new("BillboardGui", torso)
    billboard.Size = UDim2.new(0,180,0,30)
    billboard.AlwaysOnTop = true
    billboard.StudsOffset = Vector3.new(0,4.5,0)
    local label = Instance.new("TextLabel", billboard)
    label.Size = UDim2.new(1,0,1,0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255,255,255)
    label.Font = Enum.Font.SourceSansBold
    label.TextScaled = true
    label.Text = "Boss ("..model.Name..") - HP: "..tostring(humanoid.Health)

    -- listener to update label
    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        label.Text = ("Boss (%s) - HP: %d/%d"):format(model.Name, math.max(0, math.floor(humanoid.Health)), humanoid.MaxHealth)
    end)

    model.Parent = Workspace
    table.insert(SimObjects, {Model = model, Hum = humanoid, Torso = torso})
    log("Boss simulado spawnado: "..model.Name.." HP: "..humanoid.Health)
    return model
end

--// Find nearest simulated boss to player
local function findNearestSimBoss()
    local best, bestDist = nil, math.huge
    for _, info in ipairs(SimObjects) do
        if info.Model and info.Hum and info.Hum.Health > 0 then
            local torso = info.Torso
            if torso and torso.Parent then
                local dist = (torso.Position - rootPart.Position).Magnitude
                if dist < bestDist then
                    bestDist = dist
                    best = info
                end
            end
        end
    end
    return best
end

--// Teleport to a simulated boss
local function teleportToSimBoss(info)
    if not info or not info.Torso then return end
    local cf = CFrame.new(info.Torso.Position + Vector3.new(0, Config.TeleportYOffset, 0))
    -- smooth tween
    local tween = TweenService:Create(rootPart, TweenInfo.new(0.25, Enum.EasingStyle.Quad), {CFrame = cf})
    tween:Play()
    log("Teleportado localmente para boss: "..tostring(info.Model.Name))
end

--// Equip simulated weapon (local only)
local function equipLocalWeapon(weaponName)
    if not weaponName then
        log("Nenhuma arma selecionada.")
        return
    end
    local folder = ReplicatedStorage:FindFirstChild("Weapons")
    if not folder then
        log("ReplicatedStorage.Weapons não encontrado.")
        return
    end
    local item = folder:FindFirstChild(weaponName)
    if not item then
        log("Arma '"..weaponName.."' não encontrada.")
        return
    end
    -- attempt to clone a Model or Tool into character visually (local only)
    -- if it's a Tool, we can parent to StarterPack temporarily — but to keep local-only, we'll create a visible accessory part
    -- create a simple visual representation: handle part attached to root
    -- destroy any previous "SimWeapon"
    for _, c in ipairs(character:GetChildren()) do
        if c.Name == "SimWeapon" then c:Destroy() end
    end
    local handle = Instance.new("Part")
    handle.Name = "SimWeapon"
    handle.Size = Vector3.new(1.2,3,0.4)
    handle.CanCollide = false
    handle.Anchored = false
    handle.Parent = character
    -- weld to right hand or root
    local weld = Instance.new("WeldConstraint", handle)
    weld.Part0 = rootPart
    weld.Part1 = handle
    handle.CFrame = rootPart.CFrame * CFrame.new(1.2, -1.2, -1)
    log("Equipado localmente: "..weaponName)
    updateStatus()
end

--// AutoFarm logic (simulado): apply damage to boss health periodically
local autoFarmCoroutine = nil
local function startAutoFarm()
    if autoFarmCoroutine then return end
    autoFarmCoroutine = RunService.Heartbeat:Connect(function(dt)
        if not Config.AutoFarm then return end
        local target = findNearestSimBoss()
        if not target then return end
        -- simulate attack: reduce health
        if target.Hum and target.Hum.Health > 0 then
            target.Hum:TakeDamage(Config.AutoFarmDamage * dt * 3) -- scaled by dt
            -- optionally simulate skill usage
            if Config.AutoSkills then
                -- Simulate skill sequence (visual/log only)
                -- We'll not spam logs; use a timer
            end
            if target.Hum.Health <= 0 then
                log("Boss derrotado: "..tostring(target.Model.Name))
            end
        end
    end)
    log("AutoFarm iniciado (simulado).")
end

local function stopAutoFarm()
    if autoFarmCoroutine then
        autoFarmCoroutine:Disconnect()
        autoFarmCoroutine = nil
        log("AutoFarm parado.")
    end
end

--// Bind UI interactions
local function bindUI()
    UI.ButtonSpawnBoss.MouseButton1Click:Connect(function()
        local count = #SimObjects + 1
        spawnSimBoss("RafiBoss_"..tostring(count))
    end)

    UI.ButtonToggleAutoFarm.MouseButton1Click:Connect(function()
        Config.AutoFarm = not Config.AutoFarm
        UI.ButtonToggleAutoFarm.Text = "Toggle AutoFarm: " .. (Config.AutoFarm and "ON" or "OFF")
        if Config.AutoFarm then startAutoFarm() else stopAutoFarm() end
        updateStatus()
    end)

    UI.ButtonToggleAutoSkills.MouseButton1Click:Connect(function()
        Config.AutoSkills = not Config.AutoSkills
        UI.ButtonToggleAutoSkills.Text = "Toggle AutoSkills: " .. (Config.AutoSkills and "ON" or "OFF")
        updateStatus()
    end)

    UI.ButtonTeleportNearest.MouseButton1Click:Connect(function()
        local target = findNearestSimBoss()
        if target then teleportToSimBoss(target) else log("Nenhum boss simulado presente.") end
    end)

    UI.ButtonEquipNextWeapon.MouseButton1Click:Connect(function()
        -- pick next weapon from ReplicatedStorage.Weapons
        local folder = ReplicatedStorage:FindFirstChild("Weapons")
        if not folder then log("Nenhuma pasta ReplicatedStorage.Weapons encontrada.") return end
        local children = folder:GetChildren()
        if #children == 0 then log("Nenhuma arma na pasta.") return end
        -- cycle selection
        local currentIndex = 0
        for i,v in ipairs(children) do
            if v.Name == Config.SelectedWeapon then currentIndex = i break end
        end
        local nextIndex = (currentIndex % #children) + 1
        Config.SelectedWeapon = children[nextIndex].Name
        equipLocalWeapon(Config.SelectedWeapon)
    end)
end

--// Init
createGui()
populateWeaponsUI()
bindUI()
updateStatus()
log("Rafi_X Hub (Simulador Seguro) pronto. Lembre-se: este é um ambiente LOCAL de treino, não um cheat.")

--// Cleanup on character respawn: reattach refs
player.CharacterAdded:Connect(function(char)
    character = char
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    log("Character respawnado. Reconfigurando referências locais.")
    updateStatus()
end)